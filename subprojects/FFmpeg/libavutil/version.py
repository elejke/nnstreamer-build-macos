#!/usr/bin/env python3

# Copyright (c) 2018 Mathieu Duponchelle <mathieu@centricular.com>
#
# This file is part of the FFmpeg Meson build
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, see <http://www.gnu.org/licenses/>.

import argparse
import subprocess
import os
import re
import sys

if __name__=='__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('rootdir')
    parser.add_argument('output')
    parser.add_argument('extraversion')
    args = parser.parse_args()

    original_dir = os.getcwd()

    os.chdir(args.rootdir)
    is_release = True
    with open('RELEASE', 'r') as f:
        release_contents = f.read()
        if 'git' in release_contents:
            is_release = False

    if is_release:
        res = subprocess.run(['git', 'describe', '--tags', '--always'], stdout=subprocess.PIPE)
    else:
        res = subprocess.run(['git', 'describe', '--tags', '--match', 'N'], stdout=subprocess.PIPE)

    revision = res.stdout.decode()

    if not revision:
        res = subprocess.run(['git', 'log' , '-1', '--pretty=format:git-%cd-%h', '--date=short'], stdout=subprocess.PIPE)
        revision = res.stdout.decode()

    git_hash = ''
    if not revision:
        basename = os.path.basename(os.getcwd())
        m = re.match(r'ffmpeg-(HEAD-)?([0-9]{7})$', basename)
        if m:
            git_hash = ''.join([m.group(1) or '', m.group(2)])

    if not revision:
        revision = release_contents

    revision = revision.strip()

    if revision and git_hash:
        revision = '%s-%s' % (revision, git_hash)

    try:
        with open('VERSION', 'r') as f:
            version_contents = f.read()
            version = version_contents.strip()
    except FileNotFoundError:
        version = revision

    if args.extraversion:
        version = '%s-%s' % (version, args.extraversion)

    if not args.output:
        print (version)
        sys.exit(0)

    os.chdir(original_dir)

    old_revision = None
    if os.path.exists(args.output):
        with open(args.output, 'r') as f:
            old_revision = f.readlines()[3].strip().split('"')[1]

    guard = args.output.replace('/', '_').replace('.', '_').upper().replace('LIB', '')

    if revision != old_revision:
        with open(args.output, 'w') as f:
            f.write('/* Automatically generated by version.py, do not manually edit! */\n')
            f.write('#ifndef %s\n' % guard)
            f.write('#define %s\n' % guard)
            f.write('#define FFMPEG_VERSION "%s"\n' % revision)
            f.write('#endif /* %s */\n' % guard)
